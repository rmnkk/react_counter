{"version":3,"sources":["components/Counter/Counter.js","App.js","index.js"],"names":["Counter","counter","addOne","add100","increase","className","onClick","type","App","state","setState","currentState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,SAA5B,OACrB,yBAAKC,UAAU,WACb,wBAAIA,UAAU,oBAAd,iBAA4CJ,IAC5C,yBAAKI,UAAU,oBACb,4BACEC,QAASJ,EACTK,KAAK,UAFP,WAMA,4BACED,QAASH,EACTI,KAAK,UAFP,mBAMA,4BACED,QAASF,EACTG,KAAK,UAFP,gBCwBSC,E,4MAtCbC,MAAQ,CACNR,QAAS,G,EAGXC,OAAS,WACP,EAAKQ,UAAS,SAAAC,GAAY,MAAK,CAC7BV,QAASU,EAAaV,QAAU,O,EAIpCE,OAAS,WACP,EAAKO,UAAS,SAAAC,GAAY,MAAK,CAC7BV,QAASU,EAAaV,QAAU,S,EAIpCG,SAAW,WACT,EAAKF,UAEA,EAAKO,MAAMR,QAAU,GAAK,IAAM,GACnC,EAAKE,U,uDAIC,IACAF,EAAYW,KAAKH,MAAjBR,QAER,OACE,kBAAC,EAAD,CACEA,QAASA,EACTC,OAAQU,KAAKV,OACbC,OAAQS,KAAKT,OACbC,SAAUQ,KAAKR,e,GAjCLS,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.860b8761.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Counter = ({ counter, addOne, add100, increase }) => (\n  <div className=\"counter\">\n    <h1 className=\"counter__heading\">{`Count: ${counter}`}</h1>\n    <div className=\"counter__buttons\">\n      <button\n        onClick={addOne}\n        type=\"button\"\n      >\n        Add one\n      </button>\n      <button\n        onClick={add100}\n        type=\"button\"\n      >\n        Add one hundred\n      </button>\n      <button\n        onClick={increase}\n        type=\"button\"\n      >\n        Increase\n      </button>\n    </div>\n  </div>\n);\n\nCounter.propTypes = {\n  counter: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    counter: 0,\n  }\n\n  addOne = () => {\n    this.setState(currentState => ({\n      counter: currentState.counter + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(currentState => ({\n      counter: currentState.counter + 100,\n    }));\n  };\n\n  increase = () => {\n    this.addOne();\n\n    if ((this.state.counter + 1) % 5 === 0) {\n      this.add100();\n    }\n  };\n\n  render() {\n    const { counter } = this.state;\n\n    return (\n      <Counter\n        counter={counter}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}